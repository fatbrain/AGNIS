{
  "$schema": "vscode://schemas/color-theme",
	"name": "AGNIS",
  "include": "./agnis-base.json",
  "type": "dark",
  "semanticHighlighting": true,
  
  "semanticTokenColors": {
    "function": "#23B5CF",
    "class.declaration": { "foreground": "#EAEEE7", "fontStyle": "bold"},
    "class": "#eaeee7",
    "function.declaration": { "foreground": "#eaeee7"},
    "member.declaration": { "foreground": "#EAEEE7"},
    "property.declaration": { "foreground": "#EAEEE7"},
    "*.defaultLibrary": "#d4e448",
    "method.defaultLibrary": "#9AA633",
    "property.defaultLibrary": "#9AA633",
    "*.static": {"fontStyle": "underline"},
    "*.abstract": {"fontStyle": "italic"},
    "*.async": {"foreground": "#00d1d1", "fontStyle": "underline"},
    "*.declaration.async": { "foreground": "#eaeee7", "fontStyle": ""},
    "method.declaration": { "foreground": "#eaeee7"},
    // TS
    "type.declaration": "#eaeee7",
  },

  "tokenColors": [
		{
			"name": "regex no-capture",
			"scope": [
				"punctuation.definition.group.no-capture.regexp"
			],
			"settings": {
				"foreground": "#A2A599"
			}
		},
		{
			"name": "regex escape",
			"scope": [
				"constant.character.escape.backslash.regexp"
			],
			"settings": {
				"foreground": "#D4FF70"
			}
		},
		{
			"name": "regex literal",
			"scope": [
				"string.regexp punctuation.definition.string.begin",
				"string.regexp punctuation.definition.string.end"
			],
			"settings": {
				"foreground": "#e98604"
			}
		},
		{
			"name": "regex group",
			"scope": [
				"string.regexp punctuation.definition.group.regexp"
			],
			"settings": {
				"foreground": "#C3A644"
			}
		},
		{
			"name": "regex assertion",
			"scope": [
				"punctuation.definition.group.assertion.regexp",
				"keyword.operator.negation.regexp"
			],
			"settings": {
				"foreground": "#F2E2AE",
				"fontStyle": "bold"
			}
		},
		{
			"name": "Doc comment parameter",
			"scope": [
        "punctuation.definition.block.tag.jsdoc",
        "meta.brace.curly.jsdoc",
				"entity.name.type.instance.jsdoc",
				"punctuation.definition.bracket.curly.begin.jsdoc",
				"punctuation.definition.bracket.curly.end.jsdoc",
        "storage.type.class.jsdoc",
        "support.type.builtin.primitive.jsdoc",
        "storage.type.internaldeclaration.ts",
			],
			"settings": {
        "foreground": "#A2A599",
        "fontStyle": ""
			}
		},

		{
			"name": "Doc comment parameter",
			"scope": [
				"variable.other.jsdoc"
			],
			"settings": {
				"foreground": "#A2A599",
				"fontStyle": "bold"
			}
		},
    {
			"name": "Function declarations",
			"scope": [
				"support.function",
				"support.constant.handlebars",
				"source.powershell variable.other.member",
				"entity.name.operator.custom-literal"
			],
			"settings": {
				"foreground": "#23B5CF"
			}
		},
		{
			"name": "Types declaration and references",
			"scope": [
				"meta.return-type",
				"entity.other.attribute",
				"entity.name.class",
        "entity.name.function",
				"storage.type.numeric.go",
				"storage.type.byte.go",
				"storage.type.boolean.go",
				"storage.type.string.go",
				"storage.type.uintptr.go",
				"storage.type.error.go",
				"storage.type.rune.go",
				"storage.type.cs",
				"storage.type.generic.cs",
				"storage.type.modifier.cs",
				"storage.type.variable.cs",
				"storage.type.annotation.java",
				"storage.type.object.array.java",
				"storage.type.primitive.array.java",
				"storage.type.primitive.java",
				"storage.type.token.java",
				"storage.type.groovy",
				"storage.type.annotation.groovy",
				"storage.type.parameters.groovy",
				"storage.type.generic.groovy",
				"storage.type.object.array.groovy",
				"storage.type.primitive.array.groovy",
				"storage.type.primitive.groovy",
        "storage.type.accessor",
        "storage.type.function",
        "storage.type.class",
        "storage.type.extends",
        "meta.function-call.generic.python",
        "storage.type.namespace",
			],
			"settings": {
				"foreground": "#23B5CF"
			}
		},
		{
			"scope": [
				"entity.name.type.ts",
			],
			"settings": {
				"foreground": "#69ABB8"
			}
		},
		{
			"scope": [
				"storage.type.generic.java",
				"storage.type.java",
			],
			"settings": {
				"foreground": "#2dcfc2"
			}
		},
		{
			"scope": [
				"support.class",
        "support.type",
			],
			"settings": {
				"foreground": "#B1B4A7"
			}
		},
		{
			"scope": [
        "support.type",
			],
			"settings": {
				"foreground": "#848683",
			}
		},
		{
			"name": "Types declaration and references, TS grammar specific",
			"scope": [
				"meta.type.cast.expr",
				"meta.type.new.expr",
				"support.constant.math",
				"support.constant.dom",
				"support.constant.json",
				"entity.other.inherited-class"
			],
			"settings": {
				"foreground": "#23B5CF"
			}
		},
		{
			"name": "Control flow / Special keywords",
			"scope": [
				"keyword.control",
				"source.cpp keyword.operator.new",
				"keyword.operator.delete", // TODO Remove
				"keyword.other.using",
				"keyword.other.operator",
				"entity.name.operator",
				"keyword.operator.new",
        "keyword.operator.expression.typeof",
				"keyword.operator.expression.instanceof",
        "keyword.operator.typeof",
				"keyword.operator.instanceof",
			],
			"settings": {
				"foreground": "#f6d256",
        "fontStyle": ""
			}
		},
    {
			"name": "Control flow",
			"scope": [
				"keyword.control.flow",
      ],
			"settings": {
				"foreground": "#e98604",
        "fontStyle": ""
			}
		},
    {
      "name": "Excepted keywords",
      "scope": [
        "keyword.control.module",
        "keyword.control.import.ts",
        "keyword.control.as.ts",
        "keyword.control.from.ts",
        "keyword.control.export.ts",
        "keyword.control.import.tsx",
        "keyword.control.as.tsx",
        "keyword.control.from.tsx",
        "keyword.control.export.tsx",
      ],
      "settings": {
        "foreground": "#a8aaa5",
      }
    },
		{
			"name": "Variable and parameter name",
			"scope": [
				"variable",
				"meta.definition.variable.name",
				"support.variable",
				"entity.name.variable",
				"constant.other.placeholder", // placeholders in strings
			],
			"settings": {
				"foreground": "#CDD0CA"
			}
		},
		{
			"name": "Parameters",
			"scope": [
				"meta.function.parameters",
        "variable.parameter",
			],
			"settings": {
				"foreground": "#E1E4DE"
			}
		},
		{
			"scope": [
				"variable.other.constant",
				"variable.other.enummember",
        "meta.delimiter.comma",
        "keyword.operator.accessor",
			],
			"settings": {
        "foreground": "#CDD0CA",
        // "foreground": "#e7ebe4",
				"fontStyle": ""
			}
		},
		{
			"name": "Object keys, TS grammar specific",
			"scope": [
				"meta.object-literal.key"
			],
			"settings": {
				"foreground": "#CDD0CA"
			}
		},
		{
			"name": "CSS property value",
			"scope": [
				"support.constant.property-value",
				"support.constant.font-name",
				"support.constant.media-type",
				"support.constant.media",
				"constant.other.color.rgb-value",
				"constant.other.rgb-value",
				"support.constant.color"
			],
			"settings": {
				"foreground": "#a38f70" // TODO
			}
		},
		{
			"name": "Regular expression groups", // TODO
			"scope": [
				"punctuation.definition.group.regexp",
				"support.other.parenthesis.regexp",
				"constant.other.character-class.set.regexp",
				"constant.character.set.regexp"
			],
			"settings": {
				"foreground": "#D4FF70"
			}
		},
		{
			"scope": [
				"punctuation.definition.character-class.regexp",
				"constant.character.character-class.regexp",
				"constant.other.character-class.regexp"
			],
			"settings": {
				"foreground": "#AFD35C" //TODO Regexps
			}
		},
		{
			"scope": [
				"keyword.operator.or.regexp",
				"keyword.control.anchor.regexp"
			],
			"settings": {
				"foreground": "#89DDFF" // TODO
			}
		},
		{
			"scope": "keyword.operator.quantifier.regexp",
			"settings": {
				"foreground": "#df3c7a" // TODO
			}
		},
		{
			"scope": "constant.character",
			"settings": {
				"foreground": "#9BCF23"
			}
		},
		{
			"scope": "constant.character.escape",
			"settings": {
				"foreground": "#89DDFF"
			}
		},
		{
			"scope": "entity.name.label",
			"settings": {
				"foreground": "#A9ADA7",
			}
		},

    /*
     * Scopes below based on Monokai's
     */
		{
			"name": "Class name",
			"scope": [
        "entity.name.namespace",
        "entity.name.scope-resolution",
      ],
			"settings": {
				"fontStyle": "bold",
				"foreground": "#B1B4A7"
			}
		},
    {
      "name": "JSX Component instance",
      "scope": [
        "support.class.component.open.jsx",
        "support.class.component.close.jsx",
      ],
      "settings": {
				"foreground": "#d3ff35",
        "fontStyle": ""
      }
    },

    {
      "name": "JSX Tag Attributes",
      "scope": [
        "entity.other.attribute-name.jsx",
      ],
      "settings": {
				"foreground": "#f2e2ae",
      }
    },

    {
			"name": "JSX Nested",
			"scope": [
        "JSXNested",
			],
			"settings": {
        "foreground": "#CDD0CA",
				"fontStyle": ""
			}
		},    
  ]
}
